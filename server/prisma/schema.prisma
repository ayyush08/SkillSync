// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Field {
  Software_Development
  Data_and_AI
  Cloud_and_Infrastructure
  Cybersecurity
  Blockchain
  Design_and_UX
  Product_and_Management
  Research_and_Academia
  Miscellaneous
}

enum Profession {
  // Software Development
  Frontend_Developer
  Backend_Developer
  Fullstack_Developer
  Software_Engineer
  Mobile_Developer
  Game_Developer
  Embedded_Systems_Engineer
  Devops_Engineer
  Qa_Engineer
  Test_Automation_Engineer

  // Data and AI
  Data_Scientist
  Data_Analyst
  Data_Engineer
  Machine_Learning_Engineer
  Ai_Researcher
  Computer_Vision_Engineer
  Nlp_Engineer
  Big_Data_Engineer

  // Cloud and Infrastructure
  Cloud_Engineer
  Cloud_Solution_Architect
  Site_Reliability_Engineer
  Network_Engineer
  System_Administrator

  // Cybersecurity
  Cybersecurity_Analyst
  Penetration_Tester
  Security_Engineer
  Cryptography_Engineer

  // Blockchain
  Blockchain_Developer
  Smart_Contract_Developer
  Web3_Developer

  // Design and UX
  Ui_Ux_Designer
  Product_Designer
  Graphic_Designer

  // Product and Management
  Product_Manager
  Technical_Project_Manager
  Scrum_Master

  // Research and Academia
  Research_Scientist
  Computer_Science_Lecturer
  Technical_Writer

  // Miscellaneous
  Game_Designer
  Ar_Vr_Developer
  Database_Administrator
  It_Support_Specialist
  Software_Architect
  Cto
}

enum Level {
  Beginner
  Intermediate
  Advanced
}

model User {
  id          String      @id @default(cuid())
  email       String      @unique
  username    String      @unique
  fullName    String
  password    String
  profilePic  String
  bio         String?
  profession Profession
  field      Field
  skills      Skill[]
  level       Level
  rating      Float       @default(0) 
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  refreshToken String?
}

model Skill {
  id          String   @id @default(cuid())
  name        String   @unique
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id         String   @id @default(cuid())
  text       String
  senderId   String
  receiverId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
